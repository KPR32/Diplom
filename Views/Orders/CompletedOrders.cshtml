@using FurnitureStore3.Domain.Entities;
@using System.Collections.Generic;
@using System.Text;
@using System.Security.Cryptography;
@model ProductsCatalogViewModel
<link rel="stylesheet" href="~/styles/AddOrder.css" />



@{
    <div class="products-container">
        @if (User.IsInRole("admin"))
        {
            <h1 style="margin-left:500px;white-space: nowrap;color: black;margin-bottom: 1em;width:auto;margin-top:50px;">Заказы</h1>
        }
        else
        {
            <h1 style="margin-left:500px;white-space: nowrap;color: black;margin-bottom: 1em;width:auto;margin-top:50px;">Мои заказы</h1>
        }
        @foreach (CompleteOrder CompleteOrders in Model.CompleteOrders)
        {
            @if (CompleteOrders.ClientUserId == User.Identity.Name || User.IsInRole("admin"))
            {
                string prodId1 = @CompleteOrders.OrderProductsName;
                string prodCount1 = @CompleteOrders.OrderProductsCount;
                string prodPrice1 = @CompleteOrders.OrderProductsPrice;
                string[] prodId = new string[99];
                string[] prodCount = new string[99];
                string[] prodPrice = new string[99];
                var numbers = prodId1.Split(',').ToList();
                var numbers1 = prodCount1.Split(',').ToList();
                var numbers2 = prodPrice1.Split(',').ToList();
                int count = 0;
                int i1 = 0;
                foreach (var number in numbers)
                {
                    prodId[i1] = number;
                    i1++;
                    count++;
                }
                int i2 = 0;
                foreach (var number in numbers1)
                {
                    prodCount[i2] = number;
                    i2++;
                }
                int i3 = 0;
                foreach (var number in numbers2)
                {
                    prodPrice[i3] = number;
                    i3++;
                }
                i1 = 0;
                i2 = 0;
                i3 = 0;
                <div class="Orders">
                    @if (@CompleteOrders.OrderFinish > DateTime.Now)
                    {
                        <h1>Номер заказа:@CompleteOrders.Id</h1>
                    }
                    else
                    {
                        <h1>Завершен - Номер заказа:@CompleteOrders.Id</h1>
                    }
                    @while (i1 != count)
                    {
                        <p style="font-size:20px;font-weight:500;">@prodId[i1] - @prodCount[i2] шт. - @prodPrice[i3] ₽</p>
                        i1++;
                        i2++;
                        i3++;
                    }
                    <p> </p>
                    @{
                        static string DecryptString(string cipherText, string key)
                        {
                            using (Aes aesAlg = Aes.Create())
                            {
                                aesAlg.Key = Convert.FromBase64String(key);
                                aesAlg.IV = new byte[16]; // Инициализационный вектор

                                ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);

                                using (MemoryStream msDecrypt = new MemoryStream(Convert.FromBase64String(cipherText)))
                                {
                                    using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))
                                    {
                                        using (StreamReader srDecrypt = new StreamReader(csDecrypt))
                                        {
                                            return srDecrypt.ReadToEnd();
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    @if (User.IsInRole("admin"))
                    {
                        @foreach (User user in Model.Users)
                        {
                            if (user.Login == User.Identity.Name)
                            {
                                string phone = DecryptString(user.Phone,user.Key);
                                <p style="font-size:20px;font-weight:500;">Номер телефона клиента: @phone</p>
                            }

                        }
                    }                                     
                    <p style="font-size:20px;font-weight:500;">Дата оформления заказа: @CompleteOrders.OrderStart.ToString("d")</p>
                    <p style="font-size:20px;font-weight:500;">Дата доставки: @CompleteOrders.OrderFinish.ToString("d")</p>
                    @{
                        string hashAddress = DecryptString(@CompleteOrders.OrderAddress, @CompleteOrders.Key);
                    }
                    <p style="font-size:20px;font-weight:500;">Адрес доставки: @hashAddress</p>
                    <p style="font-size:20px;font-weight:500;">Полная цена заказа: @CompleteOrders.TotalPrice ₽</p>
                    @if (CompleteOrders.TypePay == "1")
                    {
                        <p style="font-size:20px;font-weight:500;">Тип оплаты: Картой курьеру</p>
                    }
                    else if (CompleteOrders.TypePay == "2")
                    {
                        <p style="font-size:20px;font-weight:500;">Тип оплаты: Наличными курьеру</p>
                    }
                    @if (@CompleteOrders.OrderFinish<DateTime.Now)
                    {
                        <p style="font-size:20px;font-weight:500;">Статус заказа: Выполнен</p>
                    }
                    
                    else
                    {
                        <p style="font-size:20px;font-weight:500;">Статус заказа: Выполняется</p>
                    }                    
                </div>
            }
        }

    </div>

}

<script>
    // получаем кнопку по ее селектору CSS
    let backButton = document.querySelector('#backButton');
    // добавляем обработчик события
    backButton.onclick = () => {
        window.location = "/products/index";
    };
</script>
